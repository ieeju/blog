{"version":3,"sources":["webpack:///./src/pages/articles.jsx","webpack:///./src/util/commonUtil.js","webpack:///./src/components/Button/DefaultButton.jsx","webpack:///./src/components/Button/SNSButton.jsx","webpack:///./src/components/Button/LinkButton.jsx","webpack:///./src/components/Button/TagButton.jsx","webpack:///./src/components/Button/index.js","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","ArticleQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","layout__WEBPACK_IMPORTED_MODULE_3__","component_Button__WEBPACK_IMPORTED_MODULE_4__","util_commonUtil__WEBPACK_IMPORTED_MODULE_5__","Article","props","data","pageContext","posts","allMarkdownRemark","edges","next","prev","numPages","a","createElement","className","filter","post","node","frontmatter","title","length","map","_ref","key","id","to","path","excerpt","tags","tag","classNames","date","author","customClass","propTypes","PropTypes","object","classList","split","join","DefaultButton","_ref$children","children","_ref$to","_ref$customClass","react_default","gatsby_link_default","any","isRequired","string","SNSButton","href","element","LinkButton","Button_DefaultButton","Tags","_ref$list","list","index","array","Button_SNSButton","Button_LinkButton","TagButton","Header","_ref$title","_ref$navList","navList","Button","navItem","name","toUpperCase","Layout","_React$Component","_this","call","this","state","inheritsLoose_default","prototype","render","_this$props","location","Fragment","Helmet_default","meta","content","lang","pathname","components_Header","React","Component"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,iCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,GAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KASMe,EAAU,SAAAC,GAAS,IACfC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACCC,EAAUF,EAAKG,kBAAtBC,MACAC,EAAyBJ,EAAzBI,KAAMC,EAAmBL,EAAnBK,KAAMC,EAAaN,EAAbM,SAEpB,OACElB,EAAAmB,EAAAC,cAACd,EAAA,EAAWI,EACVV,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,cACZR,EACES,OAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,IACpDC,IAAI,SAAAC,GAAoB,IAAXN,EAAWM,EAAjBL,KACN,OACExB,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,oBAAoBS,IAAKP,EAAKQ,IAC3C/B,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,kBACbrB,EAAAmB,EAAAC,cAAA,KAAGC,UAAU,SACXrB,EAAAmB,EAAAC,cAACjB,EAAAgB,EAAD,CAAYa,GAAIT,EAAKE,YAAYQ,MAC9BV,EAAKE,YAAYC,SAIxB1B,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,kBACbrB,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,sBACbrB,EAAAmB,EAAAC,cAAA,KAAGC,UAAU,WAAWE,EAAKW,SAC7BlC,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,gBACZE,EAAKE,YAAYU,KAAKP,IAAI,SAAAQ,GACzB,OACEpC,EAAAmB,EAAAC,cAACjB,EAAAgB,EAAD,CACEW,IAAG,YAAcM,EACjBJ,GAAE,aAAeI,GAEjBpC,EAAAmB,EAAAC,cAAA,QAAMC,UAAU,OAAOe,QAMjCpC,EAAAmB,EAAAC,cAAA,OAAKC,UAAWgB,YAAW,8BACzBrC,EAAAmB,EAAAC,cAAA,KAAGC,UAAU,QAAQE,EAAKE,YAAYa,MACtCtC,EAAAmB,EAAAC,cAAA,KAAGC,UAAU,UAAb,MAA6BE,EAAKE,YAAYc,aAM1DvC,EAAAmB,EAAAC,cAAA,OAAKC,UAAU,gBACH,IAATJ,EACCjB,EAAAmB,EAAAC,cAAA,YAEApB,EAAAmB,EAAAC,cAACb,EAAA,EAAD,CAAYyB,GAAE,UAAYf,EAAQuB,YAAa,YAC5C,IADH,UAKDxB,EAAO,IAAME,EACZlB,EAAAmB,EAAAC,cAAA,YAEApB,EAAAmB,EAAAC,cAACb,EAAA,EAAD,CAAYyB,GAAE,UAAYhB,EAAQwB,YAAa,YAC5C,IADH,cAWZ/B,EAAQgC,UAAY,CAClB9B,KAAM+B,IAAUC,OAChB/B,YAAa8B,IAAUC,QAGlB,IAAM7C,EAAY,aAuBVW,oFCxGR,SAAS4B,EAAYO,GAC1B,OAAIA,QACK,GAGQA,EAAUC,MAAM,MACjBC,KAAK,qGCKjBC,UAAgB,SAAAlB,GAAA,IAAAmB,EAAAnB,EACpBoB,gBADoB,IAAAD,EACT,SADSA,EAAAE,EAAArB,EAEpBG,UAFoB,IAAAkB,EAEf,4CAFeA,EAAAC,EAAAtB,EAGpBW,mBAHoB,IAAAW,EAGN,GAHMA,EAAA,OAKpBC,EAAAjC,EAAAC,cAACiC,EAAAlC,EAAD,CACEa,GAAIA,EACJX,UAAWmB,GAAeH,YAAW,kCAEpCY,KAILF,EAAcN,UAAY,CACxBQ,SAAUP,IAAUY,IAAIC,WACxBvB,GAAIU,IAAUc,OACdhB,YAAaE,IAAUc,QAGVT,QCpBTU,EAAY,SAAA5B,GAAA,IAAAmB,EAAAnB,EAChBoB,gBADgB,IAAAD,EACL,SADKA,EAAAE,EAAArB,EAEhBG,UAFgB,IAAAkB,EAEX,4CAFWA,EAAA,OAIhBE,EAAAjC,EAAAC,cAAA,KAAGsC,KAAM1B,GACPoB,EAAAjC,EAAAC,cAAA,OAAKC,UAAWgB,YAAU,yBAA2BY,KAIzDQ,EAAUhB,UAAY,CACpBQ,SAAUP,IAAUiB,QAAQJ,WAC5BvB,GAAIU,IAAUc,OAAOD,YAGRE,QCjBTG,UAAa,SAAA/B,GAAA,IAAAmB,EAAAnB,EACjBoB,gBADiB,IAAAD,EACN,OADMA,EAAAE,EAAArB,EAEjBG,UAFiB,IAAAkB,EAEZ,4CAFYA,EAAAC,EAAAtB,EAGjBW,mBAHiB,IAAAW,EAGH,GAHGA,EAAA,OAKjBC,EAAAjC,EAAAC,cAACyC,EAAD,CAAe7B,GAAIA,EAAIQ,YAAW,QAAUA,GACzCS,KAILW,EAAWnB,UAAY,CACrBQ,SAAUP,IAAUY,IAAIC,WACxBvB,GAAIU,IAAUc,OAAOD,WACrBf,YAAaE,IAAUc,QAGVI,QChBTE,UAAO,SAAAjC,GAAA,IAAAkC,EAAAlC,EAAGmC,YAAH,IAAAD,EAAU,GAAVA,EAAA,OACXX,EAAAjC,EAAAC,cAAA,OAAKC,UAAU,gBACZ2C,EAAKpC,IAAI,SAACQ,EAAK6B,GACd,OACEb,EAAAjC,EAAAC,cAACyC,EAAD,CACE/B,IAAQmC,EAAL,IAAc7B,EACjBJ,GAAE,aAAeI,EACjBI,YAAa,OAEZJ,QAOX0B,EAAKrB,UAAY,CACfuB,KAAMtB,IAAUwB,OAGHJ,QC3BfpE,EAAAG,EAAAD,EAAA,sBAAAiE,IAAAnE,EAAAG,EAAAD,EAAA,sBAAAuE,IAAAzE,EAAAG,EAAAD,EAAA,sBAAAwE,IAAA1E,EAAAG,EAAAD,EAAA,sBAAAyE,uICWMC,UAAS,SAAAzC,GAAA,IAAA0C,EAAA1C,EAAGH,aAAH,IAAA6C,EAAW,GAAXA,EAAAC,EAAA3C,EAAe4C,eAAf,IAAAD,EAAyB,GAAzBA,EAAA,OACbpB,EAAAjC,EAAAC,cAAA,OAAKC,UAAWgB,YAAW,oBAEzBe,EAAAjC,EAAAC,cAACsD,EAAA,EAAD,CAAe1C,GAAG,IAAIQ,YAAaH,YAAW,gBAC3CX,GAKH0B,EAAAjC,EAAAC,cAAA,OAAKC,UAAWgB,YAAW,cACxBoC,EAAQ7C,IAAI,SAAA+C,GACX,OACEvB,EAAAjC,EAAAC,cAACsD,EAAA,EAAD,CAAe5C,IAAK6C,EAAQC,KAAM5C,GAAI2C,EAAQ1C,MAC3C0C,EAAQC,KAAKC,qBAQ1BP,EAAO7B,UAAY,CACjBf,MAAOgB,IAAUc,OACjBiB,QAAS/B,IAAUwB,MAAMX,YAGZe,sDC3BR,IAAMQ,EAAb,SAAAC,GACE,SAAAD,EAAYpE,GAAO,IAAAsE,EAAA,OACjBA,EAAAD,EAAAE,KAAAC,KAAMxE,IAANwE,MAEKC,MAAQ,CACXV,QAAS,CACP,CACExC,KAAM,SACN2C,KAAM,QAER,CACE3C,KAAM,YACN2C,KAAM,WAER,CACE3C,KAAM,YACN2C,KAAM,cAfKI,EADrB,OAAAI,IAAAN,EAAAC,GAAAD,EAAAO,UAsBEC,OAAA,WAAS,IAAAC,EACwBL,KAAKxE,MAA5B8E,EADDD,EACCC,SAAUvC,EADXsC,EACWtC,SACVwB,EAAYS,KAAKC,MAAjBV,QAER,OACErB,EAAAjC,EAAAC,cAAAgC,EAAAjC,EAAAsE,SAAA,KAEErC,EAAAjC,EAAAC,cAACsE,EAAAvE,EAAD,CACEO,MAAM,mBACNiE,KAAM,CACJ,CAAEf,KAAM,cAAegB,QAAS,eAChC,CAAEhB,KAAM,WAAYgB,QAAS,sBAC7B,CACEhB,KAAM,WACNgB,QAAS,yCAKbxC,EAAAjC,EAAAC,cAAA,QAAMyE,KAAK,QAGU,MAAtBL,EAASM,UACR1C,EAAAjC,EAAAC,cAAC2E,EAAD,CAAQP,SAAUA,EAAUf,QAASA,IAGvCrB,EAAAjC,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4B,KAhD/C6B,EAAA,CAA4BkB,IAAMC,WAsDlCnB,EAAOrC,UAAY,CACjBQ,SAAUP,IAAUY,IAAIC,WACxBiC,SAAU9C,IAAUC,OAAOY","file":"component---src-pages-articles-jsx-d8d06f930f20c1060448.js","sourcesContent":["import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport { graphql } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Layout } from 'layout'\r\nimport { LinkButton } from 'component/Button'\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nconst Article = props => {\r\n  const { data, pageContext } = props\r\n  const { edges: posts } = data.allMarkdownRemark\r\n  const { next, prev, numPages } = pageContext\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <div className=\"blog-posts\">\r\n        {posts\r\n          .filter(post => post.node.frontmatter.title.length > 0)\r\n          .map(({ node: post }) => {\r\n            return (\r\n              <div className=\"blog-post-preview\" key={post.id}>\r\n                <div className=\"blog-container\">\r\n                  <p className=\"title\">\r\n                    <GatsbyLink to={post.frontmatter.path}>\r\n                      {post.frontmatter.title}\r\n                    </GatsbyLink>\r\n                  </p>\r\n                </div>\r\n                <div className=\"blog-container\">\r\n                  <div className=\"blog-sub-container\">\r\n                    <p className=\"summary\">{post.excerpt}</p>\r\n                    <div className=\"tagContainer\">\r\n                      {post.frontmatter.tags.map(tag => {\r\n                        return (\r\n                          <GatsbyLink\r\n                            key={`postList_${tag}`}\r\n                            to={`/category/${tag}`}\r\n                          >\r\n                            <span className=\"tag\">{tag}</span>\r\n                          </GatsbyLink>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  <div className={classNames('blog-sub-container, right')}>\r\n                    <p className=\"date\">{post.frontmatter.date}</p>\r\n                    <p className=\"author\">{`By ${post.frontmatter.author}`}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        <div className=\"posts-bottom\">\r\n          {prev === 0 ? (\r\n            <div />\r\n          ) : (\r\n            <LinkButton to={`/posts/${prev}`} customClass={'moveLink'}>\r\n              {' '}\r\n              ← Prev\r\n            </LinkButton>\r\n          )}\r\n          {next - 1 === numPages ? (\r\n            <div />\r\n          ) : (\r\n            <LinkButton to={`/posts/${next}`} customClass={'moveLink'}>\r\n              {' '}\r\n              Next →\r\n            </LinkButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nArticle.propTypes = {\r\n  data: PropTypes.object,\r\n  pageContext: PropTypes.object,\r\n}\r\n\r\nexport const ArticleQuery = graphql`\r\n  query ArticleQuery {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { category: { eq: \"article\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 100)\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY/MM/DD\")\r\n            path\r\n            tags\r\n            author\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Article\r\n","export function classNames (classList) {\r\n  if (classList === null || classList === undefined) {\r\n    return ''\r\n  }\r\n\r\n  const textList = classList.split(', ')\r\n  return textList.join(' ')\r\n}\r\n","import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 Nav Button 구현\r\n */\r\nconst DefaultButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <GatsbyLink\r\n    to={to}\r\n    className={customClass || classNames('defaultClass, buttonContainer')}\r\n  >\r\n    {children}\r\n  </GatsbyLink>\r\n)\r\n\r\nDefaultButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default DefaultButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description Button for External Link\r\n */\r\nconst SNSButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n}) => (\r\n  <a href={to}>\r\n    <div className={classNames(`defaultClass, snsBtn`)}>{children}</div>\r\n  </a>\r\n)\r\n\r\nSNSButton.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SNSButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/link.scss'\r\n\r\nconst LinkButton = ({\r\n  children = 'Link',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <DefaultButton to={to} customClass={`link ${customClass}`}>\r\n    {children}\r\n  </DefaultButton>\r\n)\r\n\r\nLinkButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default LinkButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/tag.scss'\r\n\r\nconst Tags = ({ list = [] }) => (\r\n  <div className=\"tagContainer\">\r\n    {list.map((tag, index) => {\r\n      return (\r\n        <DefaultButton\r\n          key={`${index}_${tag}`}\r\n          to={`/category/${tag}`}\r\n          customClass={'tag'}\r\n        >\r\n          {tag}\r\n        </DefaultButton>\r\n      )\r\n    })}\r\n  </div>\r\n)\r\n\r\nTags.propTypes = {\r\n  list: PropTypes.array,\r\n}\r\n\r\nexport default Tags\r\n","export { default as DefaultButton } from './DefaultButton'\r\n\r\nexport { default as SNSButton } from './SNSButton'\r\nexport { default as LinkButton } from './LinkButton'\r\nexport { default as TagButton } from './TagButton'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { DefaultButton } from 'component/Button'\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/header.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 구현\r\n */\r\nconst Header = ({ title = '', navList = [] }) => (\r\n  <div className={classNames('HeaderContainer')}>\r\n    {/* Header Title */}\r\n    <DefaultButton to=\"/\" customClass={classNames('HeaderTitle')}>\r\n      {title}\r\n    </DefaultButton>\r\n\r\n    {/* 상위 버튼 넣을 공간 또는 다른 것을 넣을 공간 */}\r\n    {/* 기본적으로 nav를 넣기 위한 공간 */}\r\n    <div className={classNames('HeaderNav')}>\r\n      {navList.map(navItem => {\r\n        return (\r\n          <DefaultButton key={navItem.name} to={navItem.path}>\r\n            {navItem.name.toUpperCase()}\r\n          </DefaultButton>\r\n        )\r\n      })}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  navList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Header from 'component/Header'\r\n\r\nimport 'style/prism-tomorrow.scss'\r\nimport 'style/baseLayout.scss'\r\n\r\nexport class Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      navList: [\r\n        {\r\n          path: '/posts',\r\n          name: 'post',\r\n        },\r\n        {\r\n          path: '/articles',\r\n          name: 'article',\r\n        },\r\n        {\r\n          path: '/category',\r\n          name: 'category',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location, children } = this.props\r\n    const { navList } = this.state\r\n\r\n    return (\r\n      <>\r\n        {/* head custom 진행 */}\r\n        <Helmet\r\n          title=\"Gatsby for SSEON\"\r\n          meta={[\r\n            { name: 'description', content: 'sseon theme' },\r\n            { name: 'keywords', content: 'sseon, blog, theme' },\r\n            {\r\n              name: 'viewport',\r\n              content: 'width=device-width, initial-scale=1',\r\n            },\r\n          ]}\r\n        >\r\n          {/* 한국어 설정 진행 */}\r\n          <html lang=\"ko\" />\r\n        </Helmet>\r\n\r\n        {location.pathname !== '/' && (\r\n          <Header location={location} navList={navList} />\r\n        )}\r\n\r\n        <div className=\"blog-posts-container\">{children}</div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query NavQuery {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { category: { eq: \"post\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 100)\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY/MM/DD\")\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}