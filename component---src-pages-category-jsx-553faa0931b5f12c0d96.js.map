{"version":3,"sources":["webpack:///./src/components/category-card/index.jsx","webpack:///./src/components/button/DefaultButton.jsx","webpack:///./src/components/button/SNSButton.jsx","webpack:///./src/components/button/LinkButton.jsx","webpack:///./src/components/button/TagButton.jsx","webpack:///./src/pages/category.jsx","webpack:///./src/util/commonUtil.js","webpack:///./src/components/Button/DefaultButton.jsx","webpack:///./src/components/Button/SNSButton.jsx","webpack:///./src/components/Button/LinkButton.jsx","webpack:///./src/components/Button/TagButton.jsx","webpack:///./src/components/Button/index.js","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-sap.js"],"names":["CategoryCard","_ref","_ref$tagName","tagName","_ref$count","count","react_default","a","createElement","gatsby_link_default","to","key","className","propTypes","PropTypes","string","isRequired","number","DefaultButton","_ref$children","children","_ref$to","_ref$customClass","customClass","classNames","any","SNSButton","href","element","LinkButton","button_DefaultButton","Tags","_ref$list","list","map","tag","index","array","_ref$posts","posts","_ref$post","post","_ref$tag","Fragment","Object","keys","category_card_CategoryCard","length","_ref2","id","frontmatter","excerpt","title","path","tags","style","width","button_LinkButton","index_esm","object","TagsTemplate","props","pageContext","layout","category_Tags","classList","split","join","Button_DefaultButton","__webpack_require__","d","__webpack_exports__","Button_SNSButton","Button_LinkButton","TagButton","Header","_ref$title","_ref$navList","navList","Button","navItem","name","toUpperCase","Layout","_React$Component","_this","call","this","state","inheritsLoose_default","prototype","render","_this$props","location","Helmet_default","meta","content","lang","pathname","components_Header","React","Component","toObject","$keys","it","$export","core","fails","module","exports","KEY","exec","fn","exp","S","F"],"mappings":"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","file":"component---src-pages-category-jsx-553faa0931b5f12c0d96.js","sourcesContent":["import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './index.scss'\r\n\r\nexport const CategoryCard = ({ tagName = '', count = 0 }) => (\r\n  // 나중에 HOC로 빼기\r\n  <GatsbyLink to={`/category/${tagName}`}>\r\n    <div key={tagName} className=\"category-container\">\r\n      <div className=\"category-title\">\r\n        <span>{tagName}</span>\r\n      </div>\r\n      <div className=\"category-count\">\r\n        <span>{count}</span>\r\n      </div>\r\n    </div>\r\n  </GatsbyLink>\r\n)\r\n\r\nCategoryCard.propTypes = {\r\n  tagName: PropTypes.string.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n}\r\n","import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 Nav Button 구현\r\n */\r\nconst DefaultButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <GatsbyLink\r\n    to={to}\r\n    className={customClass || classNames('defaultClass, buttonContainer')}\r\n  >\r\n    {children}\r\n  </GatsbyLink>\r\n)\r\n\r\nDefaultButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default DefaultButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description Button for External Link\r\n */\r\nconst SNSButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n}) => (\r\n  <a href={to}>\r\n    <div className={classNames(`defaultClass, snsBtn`)}>{children}</div>\r\n  </a>\r\n)\r\n\r\nSNSButton.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SNSButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/link.scss'\r\n\r\nconst LinkButton = ({\r\n  children = 'Link',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <DefaultButton to={to} customClass={`link ${customClass}`}>\r\n    {children}\r\n  </DefaultButton>\r\n)\r\n\r\nLinkButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default LinkButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/tag.scss'\r\n\r\nconst Tags = ({ list = [] }) => (\r\n  <div className=\"tagContainer\">\r\n    {list.map((tag, index) => {\r\n      return (\r\n        <DefaultButton\r\n          key={`${index}_${tag}`}\r\n          to={`/category/${tag}`}\r\n          customClass={'tag'}\r\n        >\r\n          {tag}\r\n        </DefaultButton>\r\n      )\r\n    })}\r\n  </div>\r\n)\r\n\r\nTags.propTypes = {\r\n  list: PropTypes.array,\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport { FaHome } from 'react-icons/fa'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Layout } from 'layout'\r\nimport { CategoryCard } from 'component/category-card'\r\nimport { LinkButton } from 'component/button'\r\n\r\nimport 'style/posts.scss'\r\nimport 'style/post.scss'\r\n\r\nfunction Tags({ posts = {}, post = [], tag = '' }) {\r\n  return (\r\n    <>\r\n      {/* <h1>Tags</h1> */}\r\n      <div className=\"category-body\">\r\n        <div className=\"category-list\">\r\n          {Object.keys(posts).map(tagName => (\r\n            <CategoryCard\r\n              key={`${tagName}_${posts[tagName].length}`}\r\n              tagName={tagName}\r\n              count={posts[tagName].length}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {tag && (\r\n        <div className=\"blog-posts\">\r\n          <CategoryCard tagName={tag} count={post.length} />\r\n          {post.map(({ id, frontmatter, excerpt }) => {\r\n            return (\r\n              <div className=\"blog-post-preview\" key={id}>\r\n                <div className=\"blog-container\">\r\n                  <p className=\"title\">\r\n                    <GatsbyLink\r\n                      key={`${id}_${frontmatter.title}`}\r\n                      to={frontmatter.path}\r\n                    >\r\n                      {frontmatter.title}\r\n                    </GatsbyLink>\r\n                  </p>\r\n                </div>\r\n                <div className=\"blog-container\">\r\n                  <div className=\"blog-sub-container\">\r\n                    <p className=\"summary\">{excerpt}</p>\r\n                    <div className=\"tagContainer\">\r\n                      {frontmatter.tags.map(tag => {\r\n                        return (\r\n                          <GatsbyLink\r\n                            key={`${id}_${tag}`}\r\n                            to={`/category/${tag}`}\r\n                          >\r\n                            <span className=\"tag\">{tag}</span>\r\n                          </GatsbyLink>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"blog-sub-container\"\r\n                    style={{ width: '0px' }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          <LinkButton to=\"/posts\" customClass={'moveLink'}>\r\n            <FaHome /> All posts\r\n          </LinkButton>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  posts: PropTypes.object,\r\n  post: PropTypes.array,\r\n  tag: PropTypes.string,\r\n}\r\n\r\nconst TagsTemplate = props => {\r\n  const { pageContext } = props\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Tags {...pageContext} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTagsTemplate.propTypes = {\r\n  pageContext: PropTypes.any,\r\n}\r\n\r\nexport default TagsTemplate\r\n","export function classNames (classList) {\r\n  if (classList === null || classList === undefined) {\r\n    return ''\r\n  }\r\n\r\n  const textList = classList.split(', ')\r\n  return textList.join(' ')\r\n}\r\n","import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 Nav Button 구현\r\n */\r\nconst DefaultButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <GatsbyLink\r\n    to={to}\r\n    className={customClass || classNames('defaultClass, buttonContainer')}\r\n  >\r\n    {children}\r\n  </GatsbyLink>\r\n)\r\n\r\nDefaultButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default DefaultButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description Button for External Link\r\n */\r\nconst SNSButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n}) => (\r\n  <a href={to}>\r\n    <div className={classNames(`defaultClass, snsBtn`)}>{children}</div>\r\n  </a>\r\n)\r\n\r\nSNSButton.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SNSButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/link.scss'\r\n\r\nconst LinkButton = ({\r\n  children = 'Link',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <DefaultButton to={to} customClass={`link ${customClass}`}>\r\n    {children}\r\n  </DefaultButton>\r\n)\r\n\r\nLinkButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default LinkButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/tag.scss'\r\n\r\nconst Tags = ({ list = [] }) => (\r\n  <div className=\"tagContainer\">\r\n    {list.map((tag, index) => {\r\n      return (\r\n        <DefaultButton\r\n          key={`${index}_${tag}`}\r\n          to={`/category/${tag}`}\r\n          customClass={'tag'}\r\n        >\r\n          {tag}\r\n        </DefaultButton>\r\n      )\r\n    })}\r\n  </div>\r\n)\r\n\r\nTags.propTypes = {\r\n  list: PropTypes.array,\r\n}\r\n\r\nexport default Tags\r\n","export { default as DefaultButton } from './DefaultButton'\r\n\r\nexport { default as SNSButton } from './SNSButton'\r\nexport { default as LinkButton } from './LinkButton'\r\nexport { default as TagButton } from './TagButton'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { DefaultButton } from 'component/Button'\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/header.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 구현\r\n */\r\nconst Header = ({ title = '', navList = [] }) => (\r\n  <div className={classNames('HeaderContainer')}>\r\n    {/* Header Title */}\r\n    <DefaultButton to=\"/\" customClass={classNames('HeaderTitle')}>\r\n      {title}\r\n    </DefaultButton>\r\n\r\n    {/* 상위 버튼 넣을 공간 또는 다른 것을 넣을 공간 */}\r\n    {/* 기본적으로 nav를 넣기 위한 공간 */}\r\n    <div className={classNames('HeaderNav')}>\r\n      {navList.map(navItem => {\r\n        return (\r\n          <DefaultButton key={navItem.name} to={navItem.path}>\r\n            {navItem.name.toUpperCase()}\r\n          </DefaultButton>\r\n        )\r\n      })}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  navList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Header from 'component/Header'\r\n\r\nimport 'style/prism-tomorrow.scss'\r\nimport 'style/baseLayout.scss'\r\n\r\nexport class Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      navList: [\r\n        {\r\n          path: '/posts',\r\n          name: 'post',\r\n        },\r\n        {\r\n          path: '/articles',\r\n          name: 'article',\r\n        },\r\n        {\r\n          path: '/category',\r\n          name: 'category',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location, children } = this.props\r\n    const { navList } = this.state\r\n\r\n    return (\r\n      <>\r\n        {/* head custom 진행 */}\r\n        <Helmet\r\n          title=\"Gatsby for SSEON\"\r\n          meta={[\r\n            { name: 'description', content: 'sseon theme' },\r\n            { name: 'keywords', content: 'sseon, blog, theme' },\r\n            {\r\n              name: 'viewport',\r\n              content: 'width=device-width, initial-scale=1',\r\n            },\r\n          ]}\r\n        >\r\n          {/* 한국어 설정 진행 */}\r\n          <html lang=\"ko\" />\r\n        </Helmet>\r\n\r\n        {location.pathname !== '/' && (\r\n          <Header location={location} navList={navList} />\r\n        )}\r\n\r\n        <div className=\"blog-posts-container\">{children}</div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query NavQuery {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { category: { eq: \"post\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 100)\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY/MM/DD\")\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n"],"sourceRoot":""}