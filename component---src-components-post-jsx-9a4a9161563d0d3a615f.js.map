{"version":3,"sources":["webpack:///./src/components/Post.jsx","webpack:///./src/util/commonUtil.js","webpack:///./src/components/Button/DefaultButton.jsx","webpack:///./src/components/Button/SNSButton.jsx","webpack:///./src/components/Button/LinkButton.jsx","webpack:///./src/components/Button/TagButton.jsx","webpack:///./src/components/Button/index.js","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","disqus_react__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","layout__WEBPACK_IMPORTED_MODULE_4__","component_Button__WEBPACK_IMPORTED_MODULE_5__","props","_data$markdownRemark","data","markdownRemark","html","excerpt","frontmatter","title","date","tags","post","disqusConfig","identifier","id","a","createElement","className","meta","name","content","to","dangerouslySetInnerHTML","__html","list","shortname","config","propTypes","PropTypes","object","classNames","classList","split","join","DefaultButton","_ref","_ref$children","children","_ref$to","_ref$customClass","customClass","react_default","gatsby_link_default","any","isRequired","string","SNSButton","href","element","LinkButton","Button_DefaultButton","Tags","_ref$list","map","tag","index","key","array","Button_SNSButton","Button_LinkButton","TagButton","Header","_ref$title","_ref$navList","navList","Button","navItem","path","toUpperCase","Layout","_React$Component","_this","call","this","state","inheritsLoose_default","prototype","render","_this$props","location","Fragment","Helmet_default","lang","pathname","components_Header","React","Component"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAAQ,EAAAC,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,GAAAa,EAAAb,EAAAQ,EAAAI,GAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAAAA,EAAA,KAWe,SAASI,EAASY,GAAO,IAAAC,EACrBD,EAATE,KACoCC,eAApCC,EAF8BH,EAE9BG,KAAMC,EAFwBJ,EAExBI,QAASC,EAFeL,EAEfK,YACfC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KAGfC,EAAOV,EAAME,KAAKC,eAGlBQ,EAAe,CACnBC,WAAYF,EAAKG,GACjBN,MAAOG,EAAKJ,YAAYC,OAG1B,OACEhB,EAAAuB,EAAAC,cAACjB,EAAA,EAAWE,EACVT,EAAAuB,EAAAC,cAAA,OAAKC,UAAU,uBACbzB,EAAAuB,EAAAC,cAACrB,EAAAoB,EAAD,CACEP,MAAK,gBAAkBA,EACvBU,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAO,GAAKd,GACnC,CAAEa,KAAM,WAAYC,QAAO,GAAKV,MAGpClB,EAAAuB,EAAAC,cAAA,WAASC,UAAU,aAEjBzB,EAAAuB,EAAAC,cAAA,MAAIC,UAAU,SAAST,GAGvBhB,EAAAuB,EAAAC,cAAA,MAAIC,UAAU,QAAQR,GAGtBjB,EAAAuB,EAAAC,cAAA,OAAKC,UAAU,WACbzB,EAAAuB,EAAAC,cAAChB,EAAA,EAAD,CAAeqB,GAAI,UAAW,SAIhC7B,EAAAuB,EAAAC,cAAA,OACEC,UAAU,oBACVK,wBAAyB,CAAEC,OAAQlB,KAIrCb,EAAAuB,EAAAC,cAAChB,EAAA,EAAD,CAAWwB,KAAMd,GAAQ,MAG3BlB,EAAAuB,EAAAC,cAAA,WAASC,UAAU,qBACjBzB,EAAAuB,EAAAC,cAACpB,EAAA,gBAAD,CAAiB6B,UAvCD,gBAuC6BC,OAAQd,OAO/DvB,EAASsC,UAAY,CACnBxB,KAAMyB,IAAUC,QAGX,IAAMvC,EAAS,qFCrEf,SAASwC,EAAYC,GAC1B,OAAIA,QACK,GAGQA,EAAUC,MAAM,MACjBC,KAAK,qGCKjBC,UAAgB,SAAAC,GAAA,IAAAC,EAAAD,EACpBE,gBADoB,IAAAD,EACT,SADSA,EAAAE,EAAAH,EAEpBd,UAFoB,IAAAiB,EAEf,4CAFeA,EAAAC,EAAAJ,EAGpBK,mBAHoB,IAAAD,EAGN,GAHMA,EAAA,OAKpBE,EAAA1B,EAAAC,cAAC0B,EAAA3B,EAAD,CACEM,GAAIA,EACJJ,UAAWuB,GAAeV,YAAW,kCAEpCO,KAILH,EAAcP,UAAY,CACxBU,SAAUT,IAAUe,IAAIC,WACxBvB,GAAIO,IAAUiB,OACdL,YAAaZ,IAAUiB,QAGVX,QCpBTY,EAAY,SAAAX,GAAA,IAAAC,EAAAD,EAChBE,gBADgB,IAAAD,EACL,SADKA,EAAAE,EAAAH,EAEhBd,UAFgB,IAAAiB,EAEX,4CAFWA,EAAA,OAIhBG,EAAA1B,EAAAC,cAAA,KAAG+B,KAAM1B,GACPoB,EAAA1B,EAAAC,cAAA,OAAKC,UAAWa,YAAU,yBAA2BO,KAIzDS,EAAUnB,UAAY,CACpBU,SAAUT,IAAUoB,QAAQJ,WAC5BvB,GAAIO,IAAUiB,OAAOD,YAGRE,QCjBTG,UAAa,SAAAd,GAAA,IAAAC,EAAAD,EACjBE,gBADiB,IAAAD,EACN,OADMA,EAAAE,EAAAH,EAEjBd,UAFiB,IAAAiB,EAEZ,4CAFYA,EAAAC,EAAAJ,EAGjBK,mBAHiB,IAAAD,EAGH,GAHGA,EAAA,OAKjBE,EAAA1B,EAAAC,cAACkC,EAAD,CAAe7B,GAAIA,EAAImB,YAAW,QAAUA,GACzCH,KAILY,EAAWtB,UAAY,CACrBU,SAAUT,IAAUe,IAAIC,WACxBvB,GAAIO,IAAUiB,OAAOD,WACrBJ,YAAaZ,IAAUiB,QAGVI,QChBTE,UAAO,SAAAhB,GAAA,IAAAiB,EAAAjB,EAAGX,YAAH,IAAA4B,EAAU,GAAVA,EAAA,OACXX,EAAA1B,EAAAC,cAAA,OAAKC,UAAU,gBACZO,EAAK6B,IAAI,SAACC,EAAKC,GACd,OACEd,EAAA1B,EAAAC,cAACkC,EAAD,CACEM,IAAQD,EAAL,IAAcD,EACjBjC,GAAE,aAAeiC,EACjBd,YAAa,OAEZc,QAOXH,EAAKxB,UAAY,CACfH,KAAMI,IAAU6B,OAGHN,QC3BflE,EAAAG,EAAAD,EAAA,sBAAA+D,IAAAjE,EAAAG,EAAAD,EAAA,sBAAAuE,IAAAzE,EAAAG,EAAAD,EAAA,sBAAAwE,IAAA1E,EAAAG,EAAAD,EAAA,sBAAAyE,uICWMC,UAAS,SAAA1B,GAAA,IAAA2B,EAAA3B,EAAG3B,aAAH,IAAAsD,EAAW,GAAXA,EAAAC,EAAA5B,EAAe6B,eAAf,IAAAD,EAAyB,GAAzBA,EAAA,OACbtB,EAAA1B,EAAAC,cAAA,OAAKC,UAAWa,YAAW,oBAEzBW,EAAA1B,EAAAC,cAACiD,EAAA,EAAD,CAAe5C,GAAG,IAAImB,YAAaV,YAAW,gBAC3CtB,GAKHiC,EAAA1B,EAAAC,cAAA,OAAKC,UAAWa,YAAW,cACxBkC,EAAQX,IAAI,SAAAa,GACX,OACEzB,EAAA1B,EAAAC,cAACiD,EAAA,EAAD,CAAeT,IAAKU,EAAQ/C,KAAME,GAAI6C,EAAQC,MAC3CD,EAAQ/C,KAAKiD,qBAQ1BP,EAAOlC,UAAY,CACjBnB,MAAOoB,IAAUiB,OACjBmB,QAASpC,IAAU6B,MAAMb,YAGZiB,sDC3BR,IAAMQ,EAAb,SAAAC,GACE,SAAAD,EAAYpE,GAAO,IAAAsE,EAAA,OACjBA,EAAAD,EAAAE,KAAAC,KAAMxE,IAANwE,MAEKC,MAAQ,CACXV,QAAS,CACP,CACEG,KAAM,SACNhD,KAAM,QAER,CACEgD,KAAM,YACNhD,KAAM,WAER,CACEgD,KAAM,YACNhD,KAAM,cAfKoD,EADrB,OAAAI,IAAAN,EAAAC,GAAAD,EAAAO,UAsBEC,OAAA,WAAS,IAAAC,EACwBL,KAAKxE,MAA5B8E,EADDD,EACCC,SAAU1C,EADXyC,EACWzC,SACV2B,EAAYS,KAAKC,MAAjBV,QAER,OACEvB,EAAA1B,EAAAC,cAAAyB,EAAA1B,EAAAiE,SAAA,KAEEvC,EAAA1B,EAAAC,cAACiE,EAAAlE,EAAD,CACEP,MAAM,mBACNU,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,eAChC,CAAED,KAAM,WAAYC,QAAS,sBAC7B,CACED,KAAM,WACNC,QAAS,yCAKbqB,EAAA1B,EAAAC,cAAA,QAAMkE,KAAK,QAGU,MAAtBH,EAASI,UACR1C,EAAA1B,EAAAC,cAACoE,EAAD,CAAQL,SAAUA,EAAUf,QAASA,IAGvCvB,EAAA1B,EAAAC,cAAA,OAAKC,UAAU,wBAAwBoB,KAhD/CgC,EAAA,CAA4BgB,IAAMC,WAsDlCjB,EAAO1C,UAAY,CACjBU,SAAUT,IAAUe,IAAIC,WACxBmC,SAAUnD,IAAUC,OAAOe","file":"component---src-components-post-jsx-9a4a9161563d0d3a615f.js","sourcesContent":["import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport { DiscussionEmbed } from 'disqus-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Layout } from 'layout'\r\nimport { DefaultButton, TagButton } from 'component/Button'\r\n\r\nimport 'style/post.scss'\r\n\r\nexport default function Template(props) {\r\n  const { data } = props\r\n  const { html, excerpt, frontmatter } = data.markdownRemark\r\n  const { title, date, tags } = frontmatter\r\n\r\n  // Disqus config\r\n  const post = props.data.markdownRemark\r\n  // const siteTitle = get(this.props, \"data.site.siteMetadata.title\");\r\n  const disqusShortname = 'sseonblogtest'\r\n  const disqusConfig = {\r\n    identifier: post.id,\r\n    title: post.frontmatter.title,\r\n  }\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <div className=\"blog-post-container\">\r\n        <Helmet\r\n          title={`Sseon Blog - ${title}`}\r\n          meta={[\r\n            { name: 'description', content: `${excerpt}` },\r\n            { name: 'keywords', content: `${tags}` },\r\n          ]}\r\n        />\r\n        <article className=\"blog-post\">\r\n          {/* Title */}\r\n          <h1 className=\"title\">{title}</h1>\r\n\r\n          {/* Date */}\r\n          <h2 className=\"date\">{date}</h2>\r\n\r\n          {/* Back Button */}\r\n          <div className=\"backBtn\">\r\n            <DefaultButton to={'/posts'}>{'Back'}</DefaultButton>\r\n          </div>\r\n\r\n          {/* Contents */}\r\n          <div\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n\r\n          {/* Post Tags */}\r\n          <TagButton list={tags || []} />\r\n        </article>\r\n        {/* 댓글기능 추가 */}\r\n        <article className=\"blog-post-comment\">\r\n          <DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\r\n        </article>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTemplate.propTypes = {\r\n  data: PropTypes.object,\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostByPath($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      id\r\n      excerpt(pruneLength: 100)\r\n      frontmatter {\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        path\r\n        tags\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","export function classNames (classList) {\r\n  if (classList === null || classList === undefined) {\r\n    return ''\r\n  }\r\n\r\n  const textList = classList.split(', ')\r\n  return textList.join(' ')\r\n}\r\n","import React from 'react'\r\nimport GatsbyLink from 'gatsby-link'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 Nav Button 구현\r\n */\r\nconst DefaultButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <GatsbyLink\r\n    to={to}\r\n    className={customClass || classNames('defaultClass, buttonContainer')}\r\n  >\r\n    {children}\r\n  </GatsbyLink>\r\n)\r\n\r\nDefaultButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default DefaultButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/button.scss'\r\n\r\n/**\r\n * @description Button for External Link\r\n */\r\nconst SNSButton = ({\r\n  children = 'Button',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n}) => (\r\n  <a href={to}>\r\n    <div className={classNames(`defaultClass, snsBtn`)}>{children}</div>\r\n  </a>\r\n)\r\n\r\nSNSButton.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SNSButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/link.scss'\r\n\r\nconst LinkButton = ({\r\n  children = 'Link',\r\n  to = 'https://gatsby-sseon-starter.netlify.com/',\r\n  customClass = '',\r\n}) => (\r\n  <DefaultButton to={to} customClass={`link ${customClass}`}>\r\n    {children}\r\n  </DefaultButton>\r\n)\r\n\r\nLinkButton.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  customClass: PropTypes.string,\r\n}\r\n\r\nexport default LinkButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DefaultButton from './DefaultButton'\r\n\r\nimport 'style/tag.scss'\r\n\r\nconst Tags = ({ list = [] }) => (\r\n  <div className=\"tagContainer\">\r\n    {list.map((tag, index) => {\r\n      return (\r\n        <DefaultButton\r\n          key={`${index}_${tag}`}\r\n          to={`/category/${tag}`}\r\n          customClass={'tag'}\r\n        >\r\n          {tag}\r\n        </DefaultButton>\r\n      )\r\n    })}\r\n  </div>\r\n)\r\n\r\nTags.propTypes = {\r\n  list: PropTypes.array,\r\n}\r\n\r\nexport default Tags\r\n","export { default as DefaultButton } from './DefaultButton'\r\n\r\nexport { default as SNSButton } from './SNSButton'\r\nexport { default as LinkButton } from './LinkButton'\r\nexport { default as TagButton } from './TagButton'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { DefaultButton } from 'component/Button'\r\nimport { classNames } from 'util/commonUtil'\r\n\r\nimport 'style/header.scss'\r\n\r\n/**\r\n * @description 상단 헤더 부분 구현\r\n */\r\nconst Header = ({ title = '', navList = [] }) => (\r\n  <div className={classNames('HeaderContainer')}>\r\n    {/* Header Title */}\r\n    <DefaultButton to=\"/\" customClass={classNames('HeaderTitle')}>\r\n      {title}\r\n    </DefaultButton>\r\n\r\n    {/* 상위 버튼 넣을 공간 또는 다른 것을 넣을 공간 */}\r\n    {/* 기본적으로 nav를 넣기 위한 공간 */}\r\n    <div className={classNames('HeaderNav')}>\r\n      {navList.map(navItem => {\r\n        return (\r\n          <DefaultButton key={navItem.name} to={navItem.path}>\r\n            {navItem.name.toUpperCase()}\r\n          </DefaultButton>\r\n        )\r\n      })}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  navList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Header from 'component/Header'\r\n\r\nimport 'style/prism-tomorrow.scss'\r\nimport 'style/baseLayout.scss'\r\n\r\nexport class Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      navList: [\r\n        {\r\n          path: '/posts',\r\n          name: 'post',\r\n        },\r\n        {\r\n          path: '/articles',\r\n          name: 'article',\r\n        },\r\n        {\r\n          path: '/category',\r\n          name: 'category',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location, children } = this.props\r\n    const { navList } = this.state\r\n\r\n    return (\r\n      <>\r\n        {/* head custom 진행 */}\r\n        <Helmet\r\n          title=\"Gatsby for SSEON\"\r\n          meta={[\r\n            { name: 'description', content: 'sseon theme' },\r\n            { name: 'keywords', content: 'sseon, blog, theme' },\r\n            {\r\n              name: 'viewport',\r\n              content: 'width=device-width, initial-scale=1',\r\n            },\r\n          ]}\r\n        >\r\n          {/* 한국어 설정 진행 */}\r\n          <html lang=\"ko\" />\r\n        </Helmet>\r\n\r\n        {location.pathname !== '/' && (\r\n          <Header location={location} navList={navList} />\r\n        )}\r\n\r\n        <div className=\"blog-posts-container\">{children}</div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query NavQuery {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { category: { eq: \"post\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 100)\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY/MM/DD\")\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}